# @Author - Ford Powers, January 4th, 2019

# This code handles the window resizing
function ResizeWindow {
    $pshost = get-host; $pswindow = $pshost.ui.rawui;
    $newsize = $pswindow.buffersize; $newsize.height = 3000;
    $newsize.width = 158; $pswindow.buffersize = $newsize;
    $newsize = $pswindow.windowsize; $newsize.height = 50;
    $newsize.width = 158; $pswindow.windowsize = $newsize;
}

# Initialize local variables
$SS = 100; # Small Speed
$MS = 300 # Medium Speed
$LS = 2000; # Large Speed

<# Plays the introduction page #>
function IntroductionPage {
    Start-Sleep -m $MS;
    Write-Host "                                                                                                                                               "; Start-Sleep -m $SS;
    Write-Host " ________   ________  ________  ________  ________  _________  ________  ________          ___  ___  _______   ___       ________  _______   ________"; Start-Sleep -m $SS;
    Write-Host "|\   ___  \|\   __  \|\   __  \|\   __  \|\   __  \|\___   ___\\   __  \|\   __  \        |\  \|\  \|\  ___ \ |\  \     |\   __  \|\  ___ \ |\   __  \"; Start-Sleep -m $SS;
    Write-Host "\ \  \\ \  \ \  \|\  \ \  \|\  \ \  \|\  \ \  \|\  \|___ \  \_\ \  \|\  \ \  \|\  \       \ \  \\\  \ \   __/|\ \  \    \ \  \|\  \ \   __/|\ \  \|\  \"; Start-Sleep -m $SS;
    Write-Host " \ \  \\ \  \ \   __  \ \   _  _\ \   _  _\ \   __  \   \ \  \ \ \  \\\  \ \   _  _\       \ \   __  \ \  \_|/_\ \  \    \ \   ____\ \  \_|/_\ \   _  _\"; Start-Sleep -m $SS;
    Write-Host "  \ \  \\ \  \ \  \ \  \ \  \\  \\ \  \\  \\ \  \ \  \   \ \  \ \ \  \\\  \ \  \\  \|       \ \  \ \  \ \  \_|\ \ \  \____\ \  \___|\ \  \_|\ \ \  \\  \|"; Start-Sleep -m $SS;
    Write-Host "   \ \__\\ \__\ \__\ \__\ \__\\ _\\ \__\\ _\\ \__\ \__\   \ \__\ \ \_______\ \__\\ _\        \ \__\ \__\ \_______\ \_______\ \__\    \ \_______\ \__\\ _\"; Start-Sleep -m $SS;
    Write-Host "    \|__| \|__|\|__|\|__|\|__|\|__|\|__|\|__|\|__|\|__|    \|__|  \|_______|\|__|\|__|        \|__|\|__|\|_______|\|_______|\|__|     \|_______|\|__|\|__|"; Start-Sleep -m $SS;
    Write-Host "                                                                                                                                                       "; Start-Sleep -m $SS;
    Write-Host "                                                                                                                                                       "; Start-Sleep -m $MS;
    Write-Host "Welcome to Narrator Helper!                                                                 "; Start-Sleep -m $MS;
    Read-Host -Prompt "Press Enter to Play Werewolves";
}

<# Handles the startup of the game #>
function StartUp {
    ResizeWindow;
    IntroductionPage;
}

<# Adds a little loading symbol #>
function Loading {
    Write-Host "                                                                             "; Start-Sleep -m $SS;
    Write-Host "*                                                                            "; Start-Sleep -m $SS;
    Write-Host "*                                                                            "; Start-Sleep -m $SS;
    Write-Host "*                                                                            "; Start-Sleep -m $SS;
    Write-Host "                                                                             "; Start-Sleep -m $SS;
}

<# Handles the selection of the number of players #>
function NumberOfPlayers {
    Loading;
    do {
    $WontWork = "That won't work!";
    $InputString = Read-Host -Prompt "How many players are there?"; # Initialize number of players
    $global:NumberOfPlayers = $InputString -as [Int];
    # Make sure a right value was chosen.
    if($NULL -eq $global:NumberOfPlayers) {Write-Host $WontWork -ForegroundColor Red;}
    elseif($global:NumberOfPlayers -eq 0) {Write-Host $WontWork -ForegroundColor Red;}
    elseif($global:NumberOfPlayers -eq 1) {Write-Host $WontWork -ForegroundColor Red;}
    elseif($global:NumberOfPlayers -eq 2) {Write-Host $WontWork -ForegroundColor Red;}
    elseif($global:NumberOfPlayers -eq 3) {Write-Host $WontWork -ForegroundColor Red;}
    else {$Ok = $true;}
    }
    until($Ok)
    Loading;
    Write-Host "We're playing with $NumberOfPlayers players!"
}

<# Play the intro for Werewolves #>
function WerewolvesIntro {
    Loading;
    Start-Sleep -m $SS;
    Write-Host "                                                                                     " -ForegroundColor DarkRed; Start-Sleep -m $SS;
    Write-Host "██╗    ██╗███████╗██████╗ ███████╗██╗    ██╗ ██████╗ ██╗    ██╗   ██╗███████╗███████╗" -ForegroundColor DarkRed; Start-Sleep -m $SS;
    Write-Host "██║    ██║██╔════╝██╔══██╗██╔════╝██║    ██║██╔═══██╗██║    ██║   ██║██╔════╝██╔════╝" -ForegroundColor DarkRed; Start-Sleep -m $SS;
    Write-Host "██║ █╗ ██║█████╗  ██████╔╝█████╗  ██║ █╗ ██║██║   ██║██║    ██║   ██║█████╗  ███████╗" -ForegroundColor DarkRed; Start-Sleep -m $SS;
    Write-Host "██║███╗██║██╔══╝  ██╔══██╗██╔══╝  ██║███╗██║██║   ██║██║    ╚██╗ ██╔╝██╔══╝  ╚════██║" -ForegroundColor DarkRed; Start-Sleep -m $SS;
    Write-Host "╚███╔███╔╝███████╗██║  ██║███████╗╚███╔███╔╝╚██████╔╝███████╗╚████╔╝ ███████╗███████║" -ForegroundColor DarkRed; Start-Sleep -m $SS;
    Write-Host " ╚══╝╚══╝ ╚══════╝╚═╝  ╚═╝╚══════╝ ╚══╝╚══╝  ╚═════╝ ╚══════╝ ╚═══╝  ╚══════╝╚══════╝" -ForegroundColor DarkRed; Start-Sleep -m $SS;
    Write-Host "                                                                                     " -ForegroundColor DarkRed; Start-Sleep -m $SS;
}

<# Function that takes how many players their are and asks for their names #>
function GetPlayerNames {
    Loading;
    # For loop that iterates through until all players have names
    for($i=0; $i -lt $global:NumberOfPlayers; $i++){
        $plusone = $i + 1;
        do {
        $global:PlayerArray[$i] = Read-Host -Prompt "Enter the name of Player $plusone ";
        if($global:PlayerArray[$i - 1] -eq $global:PlayerArray[$i]){Write-Host = "That's the same name!" -ForegroundColor Red; $Ok = $false;}
        elseif($null -eq $global:PlayerArray[$i]){Write-Host = "A name can't be blank!" -ForegroundColor Red; $Ok = $false;}
        else{$Ok = $true;}
        # Code will make sure array is unique 
        # if(-not(Compare-Object $global:PlayerArray $global:PlayerArray[$i] -IncludeEqual)){ Write-Host = "Start over!";}
        }
        until($Ok)
    }
    Start-Sleep -m $MS; Write-Host ""; Start-Sleep -m $MS;
    Write-Host "$global:PlayerArray";
}

<# Is resposible for prompting and storing the Werewolves #>
function ChooseWerewolves {
    Loading;
    for($i = 0; $i -lt $global:WereWolvesArray.Length; $i++) {
        $plusone = $i + 1;
        do {
            $global:WereWolvesArray[$i] = Read-Host -Prompt "Enter the name of Werewolf $plusone ";
            if($global:WereWolvesArray[$i - 1] -eq $global:WereWolvesArray[$i] -and $global:WereWolvesArray.Length -gt 5){Write-Host = "They're already a Werewolf!" -ForegroundColor red; $Ok = $false;}
            elseif($null -eq $global:WereWolvesArray[$i]){Write-Host = "A Werewolf needs a name!" -ForegroundColor Red; $Ok = $false;}
            else{$Ok = $true;}
        } 
        until($Ok)
        $global:BadGuys++; # Adds one to the bad guy counter
    }
    Start-Sleep -m $MS; Write-Host ""; Start-Sleep -m $MS;
    Write-Host "$global:WereWolvesArray" -ForegroundColor White -BackgroundColor DarkRed;
}

<# Is resposible for prompting and storing the Doctor #>
function ChooseDoctor {
    Loading;
    do {
        $global:Doctor = Read-Host -Prompt "Enter the name of the Doctor ";
        if($null -eq $global:Doctor){Write-Host = "The Doctor needs a name!" -ForegroundColor Red; $Ok = $false;}
        else{$Ok = $true;}
    } 
    until($Ok)
    Start-Sleep -m $MS; Write-Host ""; Start-Sleep -m $MS;
    Write-Host "$global:Doctor" -ForegroundColor White -BackgroundColor DarkGreen;
}

<# Is resposible for prompting and storing the Little Girl #>
function ChooseLittleGirl {
    Loading;
    do {
        $global:LittleGirl = Read-Host -Prompt "Enter the name of the Little Girl ";
        if($null -eq $global:LittleGirl){Write-Host = "The Little Girl needs a name!" -ForegroundColor Red; $Ok = $false;}
        else{$Ok = $true;}
    } 
    until($Ok)
    Start-Sleep -m $MS; Write-Host ""; Start-Sleep -m $MS;
    Write-Host "$global:LittleGirl" -ForegroundColor White -BackgroundColor DarkGreen;
}

<# Is resposible for prompting and storing Cupid #>
function ChooseCupid {
    Loading;
    do {
        $global:Cupid = Read-Host -Prompt "Enter the name of Cupid ";
        if($null -eq $global:Cupid){Write-Host = "Cupid needs a name!" -ForegroundColor Red; $Ok = $false;}
        else{$Ok = $true;}
    } 
    until($Ok)
    Start-Sleep -m $MS; Write-Host ""; Start-Sleep -m $MS;
    Write-Host "$global:Cupid" -ForegroundColor White -BackgroundColor DarkGreen;
}

<# Is resposible for prompting and storing the Demon Butler #>
function ChooseDemonButler {
    Loading;
    do {
        $global:DemonButler = Read-Host -Prompt "Enter the name of the Demon Butler ";
        if($null -eq $global:DemonButler){Write-Host = "The Demon Butler needs a name!" -ForegroundColor Red; $Ok = $false;}
        else{$Ok = $true;}
    } 
    until($Ok)
    Start-Sleep -m $MS; Write-Host ""; Start-Sleep -m $MS;
    Write-Host "$global:DemonButler" -ForegroundColor White -BackgroundColor DarkGreen;
}

<# Is resposible for prompting and storing the Demon Dog #>
function ChooseDemonDog {
    Loading;
    do {
        $global:DemonDog = Read-Host -Prompt "Enter the name of the Demon Dog ";
        if($null -eq $global:DemonDog){Write-Host = "The Demon Dog needs a name!" -ForegroundColor Red; $Ok = $false;}
        else{$Ok = $true;}
    } 
    until($Ok)
    Start-Sleep -m $MS; Write-Host ""; Start-Sleep -m $MS;
    Write-Host "$global:DemonDog" -ForegroundColor White -BackgroundColor DarkRed;
    $global:BadGuys++; # Adds one to the bad guy counter
}

<# Is resposible for prompting and storing the Old Man #>
function ChooseOldMan {
    Loading;
    do {
        $global:OldMan = Read-Host -Prompt "Enter the name of the Old Man ";
        if($null -eq $global:OldMan){Write-Host = "The Old Man needs a name!" -ForegroundColor Red; $Ok = $false;}
        else{$Ok = $true;}
    } 
    until($Ok)
    Start-Sleep -m $MS; Write-Host ""; Start-Sleep -m $MS;
    Write-Host "$global:OldMan" -ForegroundColor White -BackgroundColor DarkGreen;
}

<# Is responisble for calculating and prompting for the different characters in each game #>
function ChooseCharacters {
    $global:BadGuys = 0; # Initialize the bad guys in the game
    # This series of if statements determines how many of each character to prompt for
    if($global:NumberOfPlayers -le 4){
        $global:WereWolvesArray = @(1);
        ChooseWerewolves;
        ChooseDoctor;
    }
    elseif($global:NumberOfPlayers -le 5){
        $global:WereWolvesArray = @(1);
        ChooseWerewolves;
        ChooseDoctor;
        ChooseLittleGirl;
    }
    elseif($global:NumberOfPlayers -le 8){
        $global:WereWolvesArray = 1,2;
        ChooseWerewolves;
        ChooseDoctor;
        ChooseLittleGirl;
        ChooseCupid;
    }
    elseif($global:NumberOfPlayers -le 12){
        $global:WereWolvesArray = (1..([int32]$global:NumberOfPlayers / 3));
        ChooseWerewolves;
        ChooseDoctor;
        ChooseLittleGirl;
        ChooseCupid;
        ChooseDemonButler;
        ChooseDemonDog;
    }
    else{
        $global:WereWolvesArray = (1..([int32]$global:NumberOfPlayers / 3));
        ChooseWerewolves;
        ChooseDoctor;
        ChooseLittleGirl;
        ChooseCupid;
        ChooseDemonButler;
        ChooseDemonDog;
        ChooseOldMan;
    }
    $global:GoodGuys = $global:NumberOfPlayers - $global:BadGuys # Initialize the good guys in the game
}

function PlayGame {
    Loading;
    while($global:BadGuys -ne 0 , $global:GoodGuys -ne 0){
        Write-Host "$global:BadGuys";
        Write-Host "$global:GoodGuys";
        $global:BadGuys - 1;
    }
   Write-Host "Game Over";
}

<# The function that actually plays the game
   ***Important*
 #>
function PlayWerewolves {
 [CmdletBinding()]
 param()
    WerewolvesIntro;
    NumberOfPlayers;
    $global:PlayerArray = 1..$global:NumberOfPlayers;
    GetPlayerNames;
    ChooseCharacters;
    PlayGame;
}

# Startup
StartUp;

# Play Werewolves
PlayWerewolves;
                                                                                                                                                          
                                                                                                                                                          
                                                                                                                                                          
